// <auto-generated />
using System;
using ElBuenSabor.Controllers;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ElBuenSabor.Migrations
{
    [DbContext(typeof(ElBuenSaborContext))]
    partial class ElBuenSaborContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ElBuenSabor.Models.ArticuloInsumo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denominacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsInsumo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("float");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float");

                    b.Property<long>("RubroArticuloID")
                        .HasColumnType("bigint");

                    b.Property<double>("StockActual")
                        .HasColumnType("float");

                    b.Property<double>("StockMinimo")
                        .HasColumnType("float");

                    b.Property<string>("UnidadMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RubroArticuloID");

                    b.ToTable("ArticulosInsumo");
                });

            modelBuilder.Entity("ElBuenSabor.Models.ArticuloManufacturado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denominacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<double>("PrecioVenta")
                        .HasColumnType("float");

                    b.Property<long>("RubroGeneralID")
                        .HasColumnType("bigint");

                    b.Property<int>("TiempoEstimadoCocina")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RubroGeneralID");

                    b.ToTable("ArticulosManufacturados");
                });

            modelBuilder.Entity("ElBuenSabor.Models.ArticuloManufacturadoDetalle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArticuloInsumoID")
                        .HasColumnType("bigint");

                    b.Property<long>("ArticuloManufacturadoID")
                        .HasColumnType("bigint");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UnidadMedida")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloInsumoID");

                    b.HasIndex("ArticuloManufacturadoID");

                    b.ToTable("ArticulosManufacturadosDetalles");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("DomicilioID")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Telefono")
                        .HasColumnType("bigint");

                    b.Property<long>("UsuarioID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DomicilioID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Configuracion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantidadCocineros")
                        .HasColumnType("int");

                    b.Property<string>("EmailEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TokenMercadoPago")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configuraciones");
                });

            modelBuilder.Entity("ElBuenSabor.Models.DetalleFactura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArticuloInsumoID")
                        .HasColumnType("bigint");

                    b.Property<long>("ArticuloManufacturadoID")
                        .HasColumnType("bigint");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<long>("FacturaID")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloInsumoID");

                    b.HasIndex("ArticuloManufacturadoID");

                    b.HasIndex("FacturaID");

                    b.ToTable("DetallesFacturas");
                });

            modelBuilder.Entity("ElBuenSabor.Models.DetallePedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ArticuloInsumoID")
                        .HasColumnType("bigint");

                    b.Property<long>("ArticuloManufacturadoID")
                        .HasColumnType("bigint");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("PedidoID")
                        .HasColumnType("bigint");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ArticuloInsumoID");

                    b.HasIndex("ArticuloManufacturadoID");

                    b.HasIndex("PedidoID");

                    b.ToTable("DetallesPedidos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Domicilio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Localidad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Factura", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormaPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<double>("MontoDescuento")
                        .HasColumnType("float");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.Property<double>("TotalCosto")
                        .HasColumnType("float");

                    b.Property<double>("TotalVenta")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ElBuenSabor.Models.MercadoPagoDatos", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaAprobacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("FormaPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("IdentificadorPago")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("MetodoPago")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroTarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MercadoPagoDatos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Pedido", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ClienteID")
                        .HasColumnType("bigint");

                    b.Property<long>("DomicilioID")
                        .HasColumnType("bigint");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<long>("FacturaID")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraEstimadaFin")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("MercadoPagoDatosID")
                        .HasColumnType("bigint");

                    b.Property<long>("Numero")
                        .HasColumnType("bigint");

                    b.Property<int>("TipoEnvio")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClienteID");

                    b.HasIndex("DomicilioID");

                    b.HasIndex("FacturaID");

                    b.HasIndex("MercadoPagoDatosID");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.RubroArticulo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denominacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("RubroPadreID")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RubroPadreID");

                    b.ToTable("RubrosArticulos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.RubroGeneral", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Denominacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("RubrosGenerales");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ElBuenSabor.Models.ArticuloInsumo", b =>
                {
                    b.HasOne("ElBuenSabor.Models.RubroArticulo", "RubroArticulo")
                        .WithMany("ArticulosInsumo")
                        .HasForeignKey("RubroArticuloID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RubroArticulo");
                });

            modelBuilder.Entity("ElBuenSabor.Models.ArticuloManufacturado", b =>
                {
                    b.HasOne("ElBuenSabor.Models.RubroGeneral", "RubroGeneral")
                        .WithMany("ArticulosManufacturados")
                        .HasForeignKey("RubroGeneralID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RubroGeneral");
                });

            modelBuilder.Entity("ElBuenSabor.Models.ArticuloManufacturadoDetalle", b =>
                {
                    b.HasOne("ElBuenSabor.Models.ArticuloInsumo", "ArticuloInsumo")
                        .WithMany("ArticuloManufacturadoDetalles")
                        .HasForeignKey("ArticuloInsumoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.ArticuloManufacturado", "ArticuloManufacturado")
                        .WithMany("ArticuloManufacturadoDetalles")
                        .HasForeignKey("ArticuloManufacturadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticuloInsumo");

                    b.Navigation("ArticuloManufacturado");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Cliente", b =>
                {
                    b.HasOne("ElBuenSabor.Models.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilio");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ElBuenSabor.Models.DetalleFactura", b =>
                {
                    b.HasOne("ElBuenSabor.Models.ArticuloInsumo", "ArticuloInsumo")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("ArticuloInsumoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.ArticuloManufacturado", "ArticuloManufacturado")
                        .WithMany("DetallesFacturas")
                        .HasForeignKey("ArticuloManufacturadoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.Factura", "Factura")
                        .WithMany("DetallesFactura")
                        .HasForeignKey("FacturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticuloInsumo");

                    b.Navigation("ArticuloManufacturado");

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("ElBuenSabor.Models.DetallePedido", b =>
                {
                    b.HasOne("ElBuenSabor.Models.ArticuloInsumo", "ArticuloInsumo")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("ArticuloInsumoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.ArticuloManufacturado", "ArticuloManufacturado")
                        .WithMany("DetallesPedidos")
                        .HasForeignKey("ArticuloManufacturadoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.Pedido", "Pedido")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticuloInsumo");

                    b.Navigation("ArticuloManufacturado");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Pedido", b =>
                {
                    b.HasOne("ElBuenSabor.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.Domicilio", "Domicilio")
                        .WithMany("Pedidos")
                        .HasForeignKey("DomicilioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.Factura", "Factura")
                        .WithMany()
                        .HasForeignKey("FacturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElBuenSabor.Models.MercadoPagoDatos", "MercadoPagoDatos")
                        .WithMany()
                        .HasForeignKey("MercadoPagoDatosID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Domicilio");

                    b.Navigation("Factura");

                    b.Navigation("MercadoPagoDatos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.RubroArticulo", b =>
                {
                    b.HasOne("ElBuenSabor.Models.RubroArticulo", "RubroPadre")
                        .WithMany("RubrosHijos")
                        .HasForeignKey("RubroPadreID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("RubroPadre");
                });

            modelBuilder.Entity("ElBuenSabor.Models.ArticuloInsumo", b =>
                {
                    b.Navigation("ArticuloManufacturadoDetalles");

                    b.Navigation("DetalleFacturas");

                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.ArticuloManufacturado", b =>
                {
                    b.Navigation("ArticuloManufacturadoDetalles");

                    b.Navigation("DetallesFacturas");

                    b.Navigation("DetallesPedidos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Domicilio", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Factura", b =>
                {
                    b.Navigation("DetallesFactura");
                });

            modelBuilder.Entity("ElBuenSabor.Models.Pedido", b =>
                {
                    b.Navigation("DetallesPedido");
                });

            modelBuilder.Entity("ElBuenSabor.Models.RubroArticulo", b =>
                {
                    b.Navigation("ArticulosInsumo");

                    b.Navigation("RubrosHijos");
                });

            modelBuilder.Entity("ElBuenSabor.Models.RubroGeneral", b =>
                {
                    b.Navigation("ArticulosManufacturados");
                });
#pragma warning restore 612, 618
        }
    }
}
